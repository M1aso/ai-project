openapi: 3.1.0
info:
  title: Auth API
  version: 0.2.0
servers:
  - url: http://api.45.146.164.70.nip.io
    description: Development server
paths:
  /api/auth/healthz:
    get:
      summary: Health check
      responses:
        '200':
          description: OK

  /api/auth/phone/send-code:
    post:
      summary: Send SMS code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneSendCodeRequest'
      responses:
        '200': { description: Code sent }
        '400': { $ref: '#/components/responses/Error400' }
        '429': { $ref: '#/components/responses/Error429' }

  /api/auth/phone/verify:
    post:
      summary: Verify SMS code and issue tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneVerifyRequest'
      responses:
        '200':
          description: Tokens issued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPair'
        '400': { $ref: '#/components/responses/Error400' }
        '401': { $ref: '#/components/responses/Error401' }
        '423': { $ref: '#/components/responses/Error423' }
        '429': { $ref: '#/components/responses/Error429' }

  /api/auth/email/register:
    post:
      summary: Register with email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRegisterRequest'
      responses:
        '200': { description: Verification sent }
        '400': { $ref: '#/components/responses/Error400' }
        '429': { $ref: '#/components/responses/Error429' }

  /api/auth/email/verify:
    post:
      summary: Verify email token and issue tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerifyRequest'
      responses:
        '200':
          description: Tokens issued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPair'
        '400': { $ref: '#/components/responses/Error400' }
        '401': { $ref: '#/components/responses/Error401' }
        '429': { $ref: '#/components/responses/Error429' }

  /api/auth/login:
    post:
      summary: Login with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailLoginRequest'
      responses:
        '200':
          description: Tokens issued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPair'
        '400': { $ref: '#/components/responses/Error400' }
        '401': { $ref: '#/components/responses/Error401' }
        '423': { $ref: '#/components/responses/Error423' }
        '429': { $ref: '#/components/responses/Error429' }

  /api/auth/password/reset/request:
    post:
      summary: Request password reset email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
      responses:
        '200': { description: Reset email sent }
        '400': { $ref: '#/components/responses/Error400' }
        '429': { $ref: '#/components/responses/Error429' }

  /api/auth/password/reset/confirm:
    post:
      summary: Confirm password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
      responses:
        '200': { description: Password updated }
        '400': { $ref: '#/components/responses/Error400' }
        '401': { $ref: '#/components/responses/Error401' }
        '429': { $ref: '#/components/responses/Error429' }

  /api/auth/refresh:
    post:
      summary: Refresh access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
      responses:
        '200':
          description: Tokens issued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPair'
        '400': { $ref: '#/components/responses/Error400' }
        '401': { $ref: '#/components/responses/Error401' }
        '429': { $ref: '#/components/responses/Error429' }

  /api/auth/logout:
    post:
      summary: Logout and invalidate refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequest'
      responses:
        '204': { description: Logged out }
        '400': { $ref: '#/components/responses/Error400' }
        '401': { $ref: '#/components/responses/Error401' }

  /api/auth/email/update/request:
    post:
      summary: Request email update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailUpdateRequest'
      responses:
        '200': { description: Verification sent }
        '400': { $ref: '#/components/responses/Error400' }
        '401': { $ref: '#/components/responses/Error401' }
        '429': { $ref: '#/components/responses/Error429' }

  /api/auth/email/update/confirm:
    post:
      summary: Confirm email update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailUpdateConfirmRequest'
      responses:
        '200': { description: Email updated }
        '400': { $ref: '#/components/responses/Error400' }
        '401': { $ref: '#/components/responses/Error401' }
        '429': { $ref: '#/components/responses/Error429' }

  /api/auth/phone/update/send-code:
    post:
      summary: Send code for phone update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneSendCodeRequest'
      responses:
        '200': { description: Code sent }
        '400': { $ref: '#/components/responses/Error400' }
        '401': { $ref: '#/components/responses/Error401' }
        '429': { $ref: '#/components/responses/Error429' }

  /api/auth/phone/update/verify:
    post:
      summary: Verify phone update code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneUpdateVerifyRequest'
      responses:
        '200': { description: Phone updated }
        '400': { $ref: '#/components/responses/Error400' }
        '401': { $ref: '#/components/responses/Error401' }
        '423': { $ref: '#/components/responses/Error423' }
        '429': { $ref: '#/components/responses/Error429' }

components:
  schemas:
    Error:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
        message:
          type: string
    TokenPair:
      type: object
      required: [access_token, refresh_token]
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
    EmailRegisterRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
        password:
          type: string
    EmailVerifyRequest:
      type: object
      required: [token]
      properties:
        token:
          type: string
    EmailLoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
        password:
          type: string
        remember_me:
          type: boolean
          default: false
    PasswordResetRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string
    PasswordResetConfirmRequest:
      type: object
      required: [token, new_password]
      properties:
        token:
          type: string
        new_password:
          type: string
    RefreshRequest:
      type: object
      required: [refresh_token]
      properties:
        refresh_token:
          type: string
    LogoutRequest:
      type: object
      required: [refresh_token]
      properties:
        refresh_token:
          type: string
    EmailUpdateRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string
    EmailUpdateConfirmRequest:
      type: object
      required: [token]
      properties:
        token:
          type: string
    PhoneSendCodeRequest:
      type: object
      required: [phone]
      properties:
        phone:
          type: string
    PhoneVerifyRequest:
      type: object
      required: [phone, code]
      properties:
        phone:
          type: string
        code:
          type: string
        email:
          type: string
        password:
          type: string
    PhoneUpdateVerifyRequest:
      type: object
      required: [phone, code]
      properties:
        phone:
          type: string
        code:
          type: string
  responses:
    Error400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error423:
      description: Locked
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error429:
      description: Too many requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
