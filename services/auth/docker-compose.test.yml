version: '3.8'

services:
  # Authentication service
  auth:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://auth_user:auth_pass@db:5432/auth_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET_KEY=test-secret-key-for-development-only
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - SMTP_USE_TLS=false
      - FROM_EMAIL=noreply@testapp.com
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - db
      - redis
      - mailhog
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth_user -d auth_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for rate limiting and sessions
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass redis_password
    environment:
      - REDIS_PASSWORD=redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Test runner service
  test-runner:
    build: 
      context: .
      dockerfile: Dockerfile
    command: python /app/scripts/test_auth_flow.py --url http://auth:8000
    environment:
      - PYTHONPATH=/app
    depends_on:
      auth:
        condition: service_healthy
      mailhog:
        condition: service_healthy
    volumes:
      - ./scripts:/app/scripts
    profiles:
      - test

volumes:
  postgres_data:
  redis_data:
