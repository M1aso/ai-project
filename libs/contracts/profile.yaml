openapi: 3.1.0
info:
  title: Profile API
  version: 0.1.0
paths:
  /healthz:
    get:
      summary: Health check
      responses:
        '200':
          description: OK

  /api/profile:
    get:
      summary: Get profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
    put:
      summary: Update profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdate'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'

  /api/profile/avatar/presign:
    post:
      summary: Presign avatar upload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvatarPresignRequest'
      responses:
        '200':
          description: Upload URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvatarPresignResponse'

components:
  schemas:
    Profile:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        first_name:
          type: string
          maxLength: 100
        nickname:
          type: string
          maxLength: 50
          nullable: true
        birth_date:
          type: string
          format: date
          nullable: true
        gender:
          type: string
          enum: [male, female, other]
          nullable: true
        country:
          type: string
          maxLength: 100
          nullable: true
        city:
          type: string
          maxLength: 100
          nullable: true
        company:
          type: string
          maxLength: 150
          nullable: true
        position:
          type: string
          maxLength: 150
          nullable: true
        experience_id:
          type: integer
          nullable: true
        avatar_url:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
      required: [user_id, first_name, updated_at]
    ProfileUpdate:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 100
        nickname:
          type: string
          maxLength: 50
        birth_date:
          type: string
          format: date
        gender:
          type: string
          enum: [male, female, other]
        country:
          type: string
          maxLength: 100
        city:
          type: string
          maxLength: 100
        company:
          type: string
          maxLength: 150
        position:
          type: string
          maxLength: 150
        experience_id:
          type: integer
        avatar_url:
          type: string
      additionalProperties: false
    AvatarPresignRequest:
      type: object
      properties:
        content_type:
          type: string
        size:
          type: integer
      required: [content_type, size]
    AvatarPresignResponse:
      type: object
      properties:
        upload_url:
          type: string
        avatar_url:
          type: string
      required: [upload_url, avatar_url]
